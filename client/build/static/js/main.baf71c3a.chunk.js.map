{"version":3,"sources":["contexts/authContext.js","components/GoogleLogin/Button.js","components/Header/Navbar.js","components/Home/Home.js","components/About/About.js","common/history.js","components/Booking/Booking.js","components/Contact/Contact.js","components/Gallery/Gallery.js","components/BookHall/BookHall.js","components/Dashboard/Dashboard.js","components/Booking/Book-form.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","useState","isAuthenticated","setIsAuthenticated","type","setType","username","setUsername","Provider","value","children","Button","useContext","useEffect","axios","get","process","then","res","data","user","console","log","catch","err","response","onClick","window","location","Navbar","items","map","item","to","split","key","charAt","toUpperCase","slice","Home","About","createBrowserHistory","days","content","Booking","Date","from","setFrom","setTo","React","checked","setChecked","available","setAvailable","selectedDates","setSelectedDates","updateState","forceUpdate","useCallback","onSubmit","e","preventDefault","post","setUTCHours","rangeOfDates","startDate","stopDate","dateArray","currentDate","push","toString","setDate","getDate","getDates","bookedDates","indexOf","date","status","submitHandler","utils","DateFnsUtils","margin","id","label","format","minDate","now","minDateMessage","onChange","KeyboardButtonProps","Collapse","in","FormControlLabel","control","Switch","prev","history","pathname","state","bookSubmit","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","index","str","dateObj","parse","month","String","getMonth","padStart","getFullYear","formatDate","getDay","Checkbox","color","target","splice","disabled","length","Contact","Gallery","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","open","setOpen","heading","setHeading","setContent","handleDrawerClose","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","button","style","textDecoration","ListItemText","primary","BookForm","i","App","navbar","exact","path","Dashboard","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.baf71c3a.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = props => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [type, setType] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        setIsAuthenticated,\r\n        type,\r\n        setType,\r\n        username,\r\n        setUsername\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    isAuthenticated,\r\n    setIsAuthenticated,\r\n    setType,\r\n    setUsername,\r\n  } = useContext(AuthContext);\r\n  const login = () => {\r\n    window.location = process.env.REACT_APP_BACKEND_URL + \"/google\";\r\n  };\r\n\r\n  const logout = () => {\r\n    axios.get(process.env.REACT_APP_BACKEND_URL + \"/logout\").then((res) => {\r\n      setIsAuthenticated(false);\r\n      window.location = \"/\";\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_BACKEND_URL + \"/login\")\r\n      .then((res) => {\r\n        setIsAuthenticated(true);\r\n        setType(res.data.user.type);\r\n        setUsername(res.data.user.username);\r\n        console.log(res.data.user);\r\n      })\r\n      .catch((err) => {\r\n        setIsAuthenticated(false);\r\n        setType(\"\");\r\n        setUsername(\"\");\r\n        console.log(err.response.data);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (isAuthenticated) {\r\n    return <button onClick={logout}>Logout </button>;\r\n  } else {\r\n    return <button onClick={login}>Google Login </button>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleLogin from \"../GoogleLogin/Button\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav>\r\n      {props.items.map(item => {\r\n        return (\r\n          <Link to={item.split(\" \")[0]} key={item}>\r\n            <li>{item.charAt(0).toUpperCase() + item.slice(1)}</li>\r\n          </Link>\r\n        );\r\n      })}\r\n      <GoogleLogin />\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return <div>Home</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return <div>About</div>;\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React, { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport history from \"../../common/history\";\r\n\r\nvar days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nlet content = [];\r\nfunction formatDate(str) {\r\n  var dateObj = new Date(Date.parse(str));\r\n  let month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\r\n  let day = String(dateObj.getDate()).padStart(2, \"0\");\r\n  let year = dateObj.getFullYear();\r\n  let output = day + \"/\" + month + \"/\" + year;\r\n  return output;\r\n}\r\nexport default function Booking() {\r\n  const [from, setFrom] = useState(new Date());\r\n  const [to, setTo] = useState(new Date());\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [available, setAvailable] = useState(false);\r\n  const [selectedDates, setSelectedDates] = useState([]);\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    content = [];\r\n    setAvailable(false);\r\n    setSelectedDates([]);\r\n    axios\r\n      .post(process.env.REACT_APP_BACKEND_URL + \"/api/book/check\", {\r\n        from: new Date(from.setUTCHours(0, 0, 0, 0)),\r\n        to: new Date(\r\n          checked ? to.setUTCHours(0, 0, 0, 0) : from.setUTCHours(0, 0, 0, 0)\r\n        ),\r\n      })\r\n      .then((res) => {\r\n        function getDates(startDate, stopDate) {\r\n          var dateArray = [];\r\n          var currentDate = new Date(startDate);\r\n          while (currentDate <= stopDate) {\r\n            dateArray.push(new Date(currentDate).toString());\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n          return dateArray;\r\n        }\r\n        let rangeOfDates = getDates(\r\n          from,\r\n          checked\r\n            ? new Date(to.setUTCHours(0, 0, 0, 0))\r\n            : new Date(from.setUTCHours(0, 0, 0, 0))\r\n        );\r\n        let bookedDates = res.data.bookedDates.map((item) => {\r\n          return new Date(item).toString();\r\n        });\r\n\r\n        rangeOfDates.map((item) => {\r\n          if (bookedDates.indexOf(item) !== -1) {\r\n            content.push({\r\n              date: item,\r\n              status: \"Booked\",\r\n            });\r\n          } else {\r\n            content.push({\r\n              date: item,\r\n              status: \"Available\",\r\n            });\r\n          }\r\n          return null;\r\n        });\r\n\r\n        setAvailable(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function bookSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(selectedDates);\r\n    history.push({ pathname: \"/booking-form\", state: { selectedDates } });\r\n  }\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => submitHandler(e)}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label={checked ? \"From :\" : \"Choose Date\"}\r\n            format=\"dd/MM/yyyy\"\r\n            value={from}\r\n            minDate={Date.now()}\r\n            minDateMessage=\"Invalid Date\"\r\n            onChange={(data) => setFrom(data)}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          <Collapse in={checked}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"date-picker-dialog\"\r\n              label=\"To\"\r\n              format=\"dd/MM/yyyy\"\r\n              value={to}\r\n              minDate={from}\r\n              minDateMessage=\"Invalid Date\"\r\n              onChange={(data) => setTo(data)}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </Collapse>\r\n        </MuiPickersUtilsProvider>\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={handleChange} />}\r\n          label=\"More than one Date\"\r\n        />\r\n        <input type=\"submit\" value=\"Check Available\" />\r\n      </form>\r\n      <Collapse in={available}>\r\n        <form onSubmit={(e) => bookSubmit(e)}>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell align=\"right\">Day</TableCell>\r\n                  <TableCell align=\"right\">Availability</TableCell>\r\n                  <TableCell align=\"right\">Select</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {content.map((row, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell align=\"left\">{formatDate(row.date)}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {days[new Date(Date.parse(row.date)).getDay()]}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.status}</TableCell>\r\n                      {row.status === \"Available\" ? (\r\n                        <TableCell align=\"right\">\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                color=\"primary\"\r\n                                value={row.date}\r\n                                onChange={(e) => {\r\n                                  let index = selectedDates.indexOf(\r\n                                    e.target.value\r\n                                  );\r\n                                  if (e.target.checked) {\r\n                                    setSelectedDates([\r\n                                      ...selectedDates,\r\n                                      e.target.value,\r\n                                    ]);\r\n                                  } else if (index !== -1) {\r\n                                    setSelectedDates((prev) => {\r\n                                      selectedDates.splice(index, 1);\r\n                                      return selectedDates;\r\n                                    });\r\n                                    forceUpdate();\r\n                                  }\r\n                                }}\r\n                              />\r\n                            }\r\n                            label=\"\"\r\n                          />\r\n                        </TableCell>\r\n                      ) : (\r\n                        <TableCell align=\"right\">\r\n                          <FormControlLabel\r\n                            control={<Checkbox color=\"primary\" disabled />}\r\n                            label=\"\"\r\n                          />\r\n                        </TableCell>\r\n                      )}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Book \"\r\n            disabled={selectedDates.length === 0}\r\n          />\r\n        </form>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Contact() {\r\n  return <div>Contact us</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Gallery() {\r\n  return <div>Gallery</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nexport default function Booking() {\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .post(process.env.REACT_APP_BACKEND_URL + \"/api/book\", {\r\n        from: new Date(from.setUTCHours(0, 0, 0, 0)),\r\n        to: new Date(\r\n          checked ? to.setUTCHours(0, 0, 0, 0) : from.setUTCHours(0, 0, 0, 0)\r\n        ),\r\n      })\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [from, setFrom] = useState(new Date());\r\n  const [to, setTo] = useState(checked ? new Date() : from);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n  return (\r\n    <form onSubmit={(e) => submitHandler(e)}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={checked ? \"From :\" : \"Choose Date\"}\r\n          format=\"dd/MM/yyyy\"\r\n          value={from}\r\n          onChange={(data) => setFrom(data)}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n\r\n        <Collapse in={checked}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"To\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={to}\r\n            onChange={(data) => setTo(data)}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n        </Collapse>\r\n      </MuiPickersUtilsProvider>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label=\"More than one Date\"\r\n      />\r\n      <input type=\"submit\" value=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport BookHall from \"../BookHall/BookHall\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const { setIsAuthenticated } = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    axios.get(process.env.REACT_APP_BACKEND_URL + \"/logout\").then((res) => {\r\n      setIsAuthenticated(false);\r\n      window.location = \"/\";\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [heading, setHeading] = React.useState(\"Dashboard\");\r\n  const [content, setContent] = useState(<BookHall />);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {heading}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => {}}>\r\n            {/* <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon> */}\r\n            <Link to=\"/\" className=\"link\" style={{ textDecoration: \"none\" }}>\r\n              <ListItemText primary=\"Home\" />\r\n            </Link>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              setHeading(\"Book Hall\");\r\n              setContent(<BookHall />);\r\n              handleDrawerClose();\r\n            }}\r\n          >\r\n            <ListItemText primary=\"Book hall\" />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={logout}>\r\n            {/* <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon> */}\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {content}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction formatDate(str) {\r\n  var dateObj = new Date(Date.parse(str));\r\n  let month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\r\n  let day = String(dateObj.getDate()).padStart(2, \"0\");\r\n  let year = dateObj.getFullYear();\r\n  let output = day + \"/\" + month + \"/\" + year;\r\n  return output;\r\n}\r\n\r\nexport default function BookForm(props) {\r\n  const [selectedDates] = useState(props.location.state.selectedDates);\r\n  return (\r\n    <ul>\r\n      {selectedDates.map((item, i) => {\r\n        var date = new Date(Date.parse(item));\r\n        console.log(formatDate(item));\r\n        return <li key={i}>Date {i}</li>;\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import PrivateRoute from \"./common/privateRoute\";\nimport { AuthContext } from \"./contexts/authContext\";\nimport Navbar from \"./components/Header/Navbar\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport About from \"./components/About/About\";\nimport Booking from \"./components/Booking/Booking\";\nimport Contact from \"./components/Contact/Contact\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport BookForm from \"./components/Booking/Book-form\";\nimport history from \"./common/history\";\nconst App = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const navbar = isAuthenticated ? (\n    <Navbar\n      items={[\n        \"home\",\n        \"about us\",\n        \"contact us\",\n        \"gallery\",\n        \"booking\",\n        \"dashboard\",\n      ]}\n    />\n  ) : (\n    <Navbar items={[\"home\", \"about us\", \"contact us\", \"gallery\", \"booking\"]} />\n  );\n\n  if (isAuthenticated) {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            {navbar}\n            <Home />\n          </Route>\n          <Route exact path=\"/home\">\n            {navbar}\n            <Home />\n          </Route>\n          <Route exact path=\"/about\">\n            {navbar}\n            <About />\n          </Route>\n          <Route exact path=\"/booking\">\n            {navbar}\n            <Booking />\n          </Route>\n          <Route exact path=\"/contact\">\n            {navbar}\n            <Contact />\n          </Route>\n          <Route exact path=\"/gallery\">\n            {navbar}\n            <Gallery />\n          </Route>\n          <Route exact path=\"/booking-form\" component={BookForm} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  return (\n    <Router history={history}>\n      {navbar}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/booking\">\n          <Booking />\n        </Route>\n        <Route exact path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route exact path=\"/gallery\">\n          <Gallery />\n        </Route>\n        <Route exact path=\"/booking-form\" component={BookForm} />\n      </Switch>\n    </Router>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AuthContextProvider from \"./contexts/authContext\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}